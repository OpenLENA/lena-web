name: '[ multi_os ] Build LA:T Web'
on:
  push:
    branches:
      - 'feature/support_multi_os'
jobs:
  compile_and_push:
    name: ${{ matrix.target-os }}
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 1
      matrix:
        target-os: [alpine3.18, ubuntu1804, rocky8, amazonlinux2]
    env:
      TARGET_OS: ${{ matrix.target-os }}
    steps:
      # check out repo
      - uses: actions/checkout@v2
      # setup JDK
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      # OS key - docker hub image mappings
      - uses: kanga333/variable-mapper@v0.3.0
        with:
          key: "${{ matrix.target-os }}"
          map: |
            {
              "centos7": {
                "TARGET_OS_IMAGE": "centos:7"
              },
              "rocky8": {
                "TARGET_OS_IMAGE": "rockylinux\\/rockylinux:8.4"
              },
              "amazonlinux2": {
                "TARGET_OS_IMAGE": "amazonlinux:2"
              },
              "ubuntu1804": {
                "TARGET_OS_IMAGE": "ubuntu:18.04"
              },
              "alpine3.18": {
                "TARGET_OS_IMAGE": "alpine:3.18"
              }            
            }
      # replace from image of dockerfile for compile
      - name: replace from image of dockerfile
        run: sed -i "s/RPLACE_WITH_FROM_IMAGE/${{ env.TARGET_OS_IMAGE }}/g" ./web-compile/action/compile-on-docker/Dockerfile
      # Compile Web
      - name: Compile Web
        uses: ./web-compile/action/compile-on-docker
      - name: maven-settings-xml-action
        uses: whelk-io/maven-settings-xml-action@v14
        with:
          repositories: '[{ "id": "github", "url": "https://maven.pkg.github.com/atlena/*" }]'
          servers: ${{secrets.GH_MVN_REPO_USER_INFO}}
      # Build Install file
      - name: Run Shell Script to Replace Symlinks
        run: bash web-dist/bin/copy_lib.sh
      - name: Build Open LA:T Web install file
        run: mvn -B package --file web-dist/pom_release.xml -Dcompile.os.name=${{ matrix.target-os }} -Dorg.slf4j.simpleLogger.log.org.apache.maven.plugins.assembly=debug
      - name: Push a file to another repository
        uses: dmnemec/copy_file_to_another_repo_action@v1.1.1
        env:
          API_TOKEN_GITHUB: ${{ secrets.LAT_ENGINE_PUSH_TOKEN }}
        with:
          source_file: 'web-dist/target/apache/.'
          destination_repo: 'ATLENA/lat-engine-temp'
          destination_folder: 'apache'
          user_email: 'lat-apache@github.com'
          user_name: 'lat-apache-actioin'
          commit_message: 'from lat-apache'
